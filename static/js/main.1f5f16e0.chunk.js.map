{"version":3,"sources":["redux/user/user-actions.js","redux/messages/messages-reducer.js","redux/user/user-reducer.js","redux/store.js","components/Spinner/Spinner.jsx","index.js","redux/messages/messages-actions.js"],"names":["currentUserSuccess","createAction","messages","createReducer","getMessageSuccess","_","payload","addMessageSuccess","state","changeMessageSuccess","reduce","acc","userMessage","id","deleteMessageSuccess","filter","loading","getMessageRequest","getMessageError","messagesReducer","combineReducers","userReducer","store","configureStore","reducer","chat","user","styles","position","display","margin","top","left","transform","borderColor","Spinner","color","css","App","React","lazy","ReactDOM","render","StrictMode","fallback","document","getElementById","addMessageRequest","addMessageError","changeMessageRequest","changeMessageError","deleteMessageRequest","deleteMessageError"],"mappings":"mIAAA,6CAGaA,GADqBC,YAAa,uBACbA,YAAa,wBACfA,YAAa,sB,uJCMvCC,EAAWC,YAAc,IAAD,mBAC3BC,KAAoB,SAACC,EAAD,OAAMC,EAAN,EAAMA,QAAN,mBAAwBA,MADjB,cAE3BC,KAAoB,SAACC,EAAD,OAAUF,EAAV,EAAUA,QAAV,4BAA4BE,GAA5B,CAAmCF,OAF5B,cAG3BG,KAAuB,SAACD,EAAD,OAAUF,EAAV,EAAUA,QAAV,OACtBE,EAAME,QACJ,SAACC,EAAKC,GAAN,OACEA,EAAYC,KAAOP,EAAQO,GAA3B,sBACQF,GADR,CACaL,IADb,sBAEQK,GAFR,CAEaC,MACf,OATwB,cAW3BE,KAAuB,SAACN,EAAD,OAAUF,EAAV,EAAUA,QAAV,OACtBE,EAAMO,QAAO,qBAAGF,KAAgBP,QAZN,IAexBU,EAAUb,aAAc,GAAD,mBAC1Bc,KAAoB,kBAAM,KADA,cAE1Bb,KAAoB,kBAAM,KAFA,cAG1Bc,KAAkB,kBAAM,KAHE,IAWdC,EALSC,YAAgB,CACtClB,WACAc,Y,QC1BaK,EAJKlB,YAAc,GAAD,eAC9BH,KAAqB,SAACK,EAAD,YAAMC,YCSfgB,EARDC,YAAe,CAC3BC,QAAS,CACPC,KAAMN,EACNO,KAAML,K,wBCNJM,EAAS,CACbC,SAAU,WACVC,QAAS,QACTC,OAAQ,SACRC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,YAAa,WAWAC,EARC,WACd,OACE,8BACE,cAAC,IAAD,CAAYC,MAAO,UAAWC,IAAKV,OCRnCW,EAAMC,IAAMC,MAAK,kBAAM,sDAE7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrB,MAAOA,EAAjB,SACE,cAAC,WAAD,CAAUsB,SAAU,cAAC,EAAD,IAApB,SACE,cAACN,EAAD,UAINO,SAASC,eAAe,U,+BCjB1B,maAEa7B,EAAoBhB,YAAa,uBACjCG,EAAoBH,YAAa,uBACjCiB,EAAkBjB,YAAa,qBAE/B8C,EAAoB9C,YAAa,uBACjCM,EAAoBN,YAAa,uBACjC+C,EAAkB/C,YAAa,qBAE/BgD,EAAuBhD,YAAa,0BACpCQ,EAAuBR,YAAa,0BACpCiD,EAAqBjD,YAAa,wBAElCkD,EAAuBlD,YAAa,0BACpCa,EAAuBb,YAAa,0BACpCmD,EAAqBnD,YAAa,0B","file":"static/js/main.1f5f16e0.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const currentUserRequest = createAction('user/currentRequest');\r\nexport const currentUserSuccess = createAction('user/currentSuccess');\r\nexport const currentUserError = createAction('user/currentError');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  getMessageRequest,\r\n  getMessageSuccess,\r\n  getMessageError,\r\n  addMessageSuccess,\r\n  changeMessageSuccess,\r\n  deleteMessageSuccess\r\n} from './messages-actions';\r\n\r\nconst messages = createReducer([], {\r\n  [getMessageSuccess]: (_, { payload }) => [...payload],\r\n  [addMessageSuccess]: (state, { payload }) => [...state, payload],\r\n  [changeMessageSuccess]: (state, { payload }) =>\r\n    state.reduce(\r\n      (acc, userMessage) =>\r\n        userMessage.id === payload.id\r\n          ? [...acc, payload]\r\n          : [...acc, userMessage],\r\n      []\r\n    ),\r\n  [deleteMessageSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload)\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getMessageRequest]: () => true,\r\n  [getMessageSuccess]: () => false,\r\n  [getMessageError]: () => false\r\n});\r\n\r\nconst messagesReducer = combineReducers({\r\n  messages,\r\n  loading\r\n});\r\n\r\nexport default messagesReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { currentUserSuccess } from './user-actions';\r\n\r\nconst userReducer = createReducer('', {\r\n  [currentUserSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nexport default userReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport messagesReducer from './messages/messages-reducer';\r\nimport userReducer from './user/user-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    chat: messagesReducer,\r\n    user: userReducer\r\n  }\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default store;\r\n","import GridLoader from 'react-spinners/GridLoader';\r\n\r\nconst styles = {\r\n  position: 'absolute',\r\n  display: 'block',\r\n  margin: '0 auto',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  borderColor: '#8cc054'\r\n};\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <GridLoader color={'#8cc054'} css={styles} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport Spinner from './components/Spinner';\n\nconst App = React.lazy(() => import('./App'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Suspense fallback={<Spinner />}>\n        <App />\n      </Suspense>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getMessageRequest = createAction('messages/getRequest');\r\nexport const getMessageSuccess = createAction('messages/getSuccess');\r\nexport const getMessageError = createAction('messages/getError');\r\n\r\nexport const addMessageRequest = createAction('messages/addRequest');\r\nexport const addMessageSuccess = createAction('messages/addSuccess');\r\nexport const addMessageError = createAction('messages/addError');\r\n\r\nexport const changeMessageRequest = createAction('messages/changeRequest');\r\nexport const changeMessageSuccess = createAction('messages/changeSuccess');\r\nexport const changeMessageError = createAction('messages/changeError');\r\n\r\nexport const deleteMessageRequest = createAction('messages/deleteRequest');\r\nexport const deleteMessageSuccess = createAction('messages/deleteSuccess');\r\nexport const deleteMessageError = createAction('messages/deleteError');\r\n"],"sourceRoot":""}